<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<artifactId>de.metas.parent.general</artifactId>
		<groupId>de.metas</groupId>
		<version>[1,10.0.0]</version> <!-- we need the range during the jenkins build -->
		<relativePath>../metasfresh-parent/pom.xml</relativePath>
	</parent>

	<groupId>de.metas.edi.esb</groupId>
	<artifactId>de-metas-edi-esb-camel</artifactId>
	<version>10.0.0</version>
	<properties>
		<spring-boot.version>2.1.8.RELEASE</spring-boot.version>
		<java.version>1.8</java.version>
		<camel.version>2.25.0</camel.version>
		<guava.version>21.0</guava.version>
		<smooks.version>1.5.1</smooks.version>
		<org.apache.poi.version>3.17</org.apache.poi.version>
		<jaxb.packageName>de.metas.edi.esb.jaxb.metasfresh</jaxb.packageName>
		<jaxb.order.packageName>de.metas.edi.esb.jaxb.stepcom.order</jaxb.order.packageName>
		<jaxb.invoice.packageName>de.metas.edi.esb.jaxb.stepcom.invoice</jaxb.invoice.packageName>
		<jaxb.desadv.packageName>de.metas.edi.esb.jaxb.stepcom.desadv</jaxb.desadv.packageName>

        <!-- Testing -->
		<junit.version>4.12</junit.version>
		<hamcrest.version>1.3</hamcrest.version>
		<!--
			3.8.0 is currently the latest and greatest. Spring boot declares some 2.x version that 
			see http://docs.spring.io/spring-boot/docs/1.2.3.RELEASE/reference/htmlsingle/#howto-customize-dependency-versions-with-maven 
		-->
		<assertj.version>3.8.0</assertj.version>
		
		<!-- https://github.com/codecentric/spring-boot-admin -->
		<spring-boot-admin.version>2.1.5</spring-boot-admin.version>
	</properties>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-dependencies</artifactId>
				<version>${spring-boot.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

			<dependency>
				<groupId>org.apache.camel</groupId>
				<artifactId>camel-spring-boot-dependencies</artifactId>
				<version>${camel.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

			<dependency>
				<groupId>com.google.guava</groupId>
				<artifactId>guava</artifactId>
				<version>${guava.version}</version>
			</dependency>

			<dependency>
				<groupId>org.hamcrest</groupId>
				<artifactId>hamcrest-library</artifactId>
				<scope>test</scope>
				<version>${hamcrest.version}</version>
			</dependency>
			<dependency>
				<groupId>org.assertj</groupId>
				<artifactId>assertj-core</artifactId>
				<scope>test</scope>
				<version>${assertj.version}</version>
			</dependency>
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>${junit.version}</version>
				<scope>test</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
<!--
		<dependency>
			<groupId>de.metas.business</groupId>
			<artifactId>de.metas.business.rest-api</artifactId>
			<version>10.0.0</version>
		</dependency>
-->
		<dependency>
			<groupId>commons-httpclient</groupId>
			<artifactId>commons-httpclient</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<artifactId>commons-logging</artifactId>
					<groupId>commons-logging</groupId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-spring-javaconfig</artifactId>
		</dependency>

		<dependency>
			<groupId>com.fasterxml.woodstox</groupId>
			<artifactId>woodstox-core</artifactId>
			<version>5.2.1</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-json</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-undertow</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>

		<dependency>
			<groupId>de.codecentric</groupId>
			<artifactId>spring-boot-admin-starter-client</artifactId>
			<version>${spring-boot-admin.version}</version>
		</dependency>

        <!-- Camel -->
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-spring-boot-starter</artifactId>
			<exclusions>
				<exclusion>
					<artifactId>slf4j-api</artifactId>
					<groupId>org.slf4j</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-stream-starter</artifactId>
		</dependency>

        <!-- ADDITIONAL DEPENDENCIES for our use cases -->
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-rabbitmq-starter</artifactId>
		</dependency>

		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-script</artifactId>
		</dependency>

		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-jaxb</artifactId>
		</dependency>

		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-ftp</artifactId>
		</dependency>

		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.milyn</groupId>
			<artifactId>milyn-smooks-all</artifactId>
			<version>${smooks.version}</version>
			<exclusions>
                <!-- excluding xercesImpl to get rid of org.xml.sax.SAXNotRecognizedException:
                    Feature 'http://javax.xml.XMLConstants/feature/secure-processing' is not
                    recognized. thx to http://stackoverflow.com/questions/25644023/error-unmarshalling-xml-in-java-8-secure-processing-org-xml-sax-saxnotrecognize -->
				<exclusion>
					<artifactId>xercesImpl</artifactId>
					<groupId>xerces</groupId>
				</exclusion>
				<exclusion>
					<artifactId>commons-logging</artifactId>
					<groupId>commons-logging</groupId>
				</exclusion>
			</exclusions>
		</dependency>
        <!-- needed by smooks -->
		<dependency>
			<artifactId>commons-logging</artifactId>
			<groupId>commons-logging</groupId>
		</dependency>

		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
		</dependency>

        <!-- Apache POI: required for Excel importing support. -->
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi</artifactId>
			<version>${org.apache.poi.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi-ooxml</artifactId>
			<version>${org.apache.poi.version}</version>
		</dependency>
        
        <!-- Logging  -->
		<dependency>
			<groupId>net.logstash.logback</groupId>
			<artifactId>logstash-logback-encoder</artifactId>
		</dependency>
        
		<!--  Testing -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<artifactId>camel-test-spring</artifactId>
			<groupId>org.apache.camel</groupId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-library</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.assertj</groupId>
			<artifactId>assertj-core</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- Using our own artifact, see 
			https://github.com/json-snapshot/json-snapshot.github.io/pull/12#issuecomment-462660733
			and 
			https://github.com/json-snapshot/json-snapshot.github.io/issues/9#issuecomment-462880359 -->
		<!-- This lib has 
		    * two different versions (1.2.0 and 1.3.2) of junit-platform-commons
		    * two different versions (1.2.0 and 1.3.2) of junit-platform-engine
		    * two different versions (5.1.1 and 5.3.2) of junit-jupiter-api
		    * two different versions (2.23.0 and 2.23.4) of mockito-core
			in its dependency tree. That's why we exclude them and then explicitly add them. 
			Also: mockito-core, jackson-databind, jackson-core, commons-lang3 and slf4j-api are used throughout the system, some we try our luck with the respective existing versions
			-->
		<dependency>
			<groupId>io.github.json-snapshot</groupId>
			<artifactId>json-snapshot-PR</artifactId>
			<version>1.0.21</version>
			<scope>test</scope>
		</dependency>

	</dependencies>

	<build>
		<finalName>${project.artifactId}</finalName>

		<plugins>

			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<version>${spring-boot.version}</version>
				<executions>
					<execution>
						<goals>
							<goal>repackage</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.camel</groupId>
				<artifactId>camel-maven-plugin</artifactId>
				<version>${camel.version}</version>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>jaxb2-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>xjc-schema-metasfresh</id>
						<goals>
							<goal>xjc</goal>
						</goals>
						<configuration>
							<sources>
								<source>src/main/xsd/metasfresh</source>
							</sources>

							<packageName>${jaxb.packageName}</packageName>
						</configuration>
					</execution>
					<execution>
						<id>xjc-schema-order</id>
						<goals>
							<goal>xjc</goal>
						</goals>
						<configuration>
							<sources>
								<source>src/main/xsd/stepcom/order</source>
							</sources>

							<packageName>${jaxb.order.packageName}</packageName>
							<clearOutputDir>false</clearOutputDir>
						</configuration>
					</execution>
					<execution>
						<id>xjc-schema-invoice</id>
						<goals>
							<goal>xjc</goal>
						</goals>
						<configuration>
							<sources>
								<source>src/main/xsd/stepcom/invoice</source>
							</sources>

							<packageName>${jaxb.invoice.packageName}</packageName>
							<clearOutputDir>false</clearOutputDir>
						</configuration>
					</execution>
					<execution>
						<id>xjc-schema-desadv</id>
						<goals>
							<goal>xjc</goal>
						</goals>
						<configuration>
							<sources>
								<source>src/main/xsd/stepcom/desadv</source>
							</sources>

							<packageName>${jaxb.desadv.packageName}</packageName>
							<clearOutputDir>false</clearOutputDir>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
				</configuration>
			</plugin>

			<!-- Create tests JAR -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>test-jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

		</plugins>
	</build>

</project>
